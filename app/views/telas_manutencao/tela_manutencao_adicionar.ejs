<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adicionar Manutenção</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f5f5f5;
        }

        .sidebar {
            width: 100px;
            height: 100vh;
            background-color: #e8e3d9;
            position: fixed;
            left: 0;
            top: 0;
            padding-top: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .sidebar .logo {
            width: 80px;
            height: auto;
            margin-bottom: 20px;
            display: block;
        }

        .sidebar-item {
            display: flex;
            flex-direction: column;
            align-items: center;    
            padding: 15px 0;
            color: #333;
            text-decoration: none;              
            font-size: 13px;
            font-weight: bold;
        }

        .icon {
            width: 24px; 
            height: 24px;
            margin-bottom: 5px;
        }

        .main-content {
            margin-left: 100px; 
            padding: 20px;
        }

        .header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 30px;
            gap: 15px;
        }

        .back-button {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 32px;
            height: 32px;
            border: 1px solid #000000;
            border-radius: 50%;
            background: none;
            cursor: pointer;
            font-size: 18px;
        }

        .page-title {
            font-size: 24px;
            font-weight: normal;
        }

        .finalize-button {
            padding: 10px 30px;
            background-color: #2F3640;
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
        }

        .content-container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
            padding: 0 20px;
        }

        .form-section {
            background-color: #f3f3f3;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .section-title {
            font-size: 16px;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            font-size: 14px;
        }

        .required::after {
            content: '*';
            color: red;
            margin-left: 3px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
        }

        .image-upload {
            background-color: white;
            border: 2px dashed #ccc;
            border-radius: 8px;
            padding: 131px;
            text-align: center;
        }

        .cloud-icon {
            width: 100px;
            height: 100px;
        }

        /* Estilos do modal */
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1; 
            left: 0;
            top: 0;
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgb(0,0,0); 
            background-color: rgba(0,0,0,0.4); 
            padding: 60px; 
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 80%; 
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .item-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .item-table th,
        .item-table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .item-table th {
            background-color: #f0f0f0;
        }

        .search-input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 100%;
            margin-bottom: 10px;
        }

        .selected-items-table {
            margin-top: 20px;
            width: 100%;
            border-collapse: collapse;
        }

        .selected-items-table th,
        .selected-items-table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .selected-items-table th {
            background-color: #e0e0e0;
        }

        .remove-button {
            color: red;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <%- include('../assets/menu.ejs') %>
    <div class="main-content">
        <div class="header">
            <button class="back-button">&lt;</button>
            <h1 class="page-title">Adicionar Manutenção</h1>
            <button class="finalize-button" onclick="finalizeMaintenance()">Finalizar Manutenção</button>
        </div>
        <div class="content-container">
            <div class="form-section">
                <div class="section-title">Dados da Manutenção</div>
                <div class="form-group">
                    <label for="grupoEquipamento" class="required">Grupo de Equipamento</label>
                    <select id="grupoEquipamento" class="form-control dropdown" onchange="updateItems()">
                        <option value="">Selecione um grupo</option>
                        <% grupoComItens.forEach(function(grupo) { %>
                            <option value="<%= grupo.idGrupo %>"><%= grupo.nome %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="itensEquipamento" class="required">Itens do Equipamento</label>
                    <button type="button" class="finalize-button" onclick="openModal()">Escolher Itens</button>
                </div>
                <h3>Itens Selecionados</h3>
                <table class="selected-items-table" id="selectedItemsTable">
                    <thead>
                        <tr>
                            <th>ID Item</th>
                            <th>Código de Barras</th>
                            <th>Nome do Item</th>
                            <th>Ação</th>
                        </tr>
                    </thead>
                    <tbody id="selectedItemsBody">
                    </tbody>
                </table>
            </div>
            <div class="form-section">
                <h2 class="section-title">Informações Gerais</h2>
                <div class="form-group">
                    <label class="required">Data da Manutenção</label>
                    <input type="date" name="maintenance_date" class="form-control" required>
                </div>
                <div class="form-group">
                    <label class="required">Data de Retorno</label>
                    <input type="date" name="return_date" class="form-control" required>
                </div>
                <div class="form-group">
                    <label class="required">Descrição do Problema</label>
                    <textarea name="problem_description" class="form-control" rows="4" required></textarea>
                </div>
                <div class="form-group">
                    <label class="required">Respons ável</label>
                    <input type="text" name="responsavel" class="form-control" required>
                </div>
            </div>
        </div>
    </div>

    <div id="itemModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h3>Itens do Grupo</h3>
            <input type="text" class="search-input" id="searchInput" placeholder="Buscar por nome ou código de barras" onkeyup="filterItems()">
            <table class="item-table" id="itemTable">
                <thead>
                    <tr>
                        <th>Selecionar</th>
                        <th>ID Item</th>
                        <th>Código de Barras</th>
                        <th>Nome do Item</th>
                    </tr>
                </thead>
                <tbody id="itemBody">
                </tbody>
            </table>
            <button class="finalize-button" onclick="confirmSelection()">Confirmar Seleção</button>
        </div>
    </div>

    <script>
        const itemsData = <%- JSON.stringify(grupoComItens) %>;
        const selectedItems = [];

        function openModal() {
            const grupoId = document.getElementById('grupoEquipamento').value;
            const modal = document.getElementById('itemModal');
            const itemBody = document.getElementById('itemBody');
            itemBody.innerHTML = '';
            selectedItems.length = 0; // Limpa a seleção anterior
            updateSelectedItemsTable();

            if (grupoId) {
                const grupoSelecionado = itemsData.find(grupo => grupo.idGrupo == grupoId);
                if (grupoSelecionado && grupoSelecionado.itens) {
                    grupoSelecionado.itens.forEach(item => {
                        itemBody.innerHTML += `
                            <tr>
                                <td><input type="checkbox" class="item-checkbox" data-id="${item.idItens}" data-cod="${item.codBarras}" data-nome="${item.nome}" onchange="updateSelectedItems(this)"></td>
                                <td>${item.idItens}</td>
                                <td>${item.codBarras}</td>
                                <td>${item.nome}</td>
                            </tr>
                        `;
                    });
                }
            }

            modal.style.display = 'block';
        }

        function closeModal() {
            const modal = document.getElementById('itemModal');
            modal.style.display = 'none';
        }

        function filterItems() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('itemTable');
            const tr = table.getElementsByTagName('tr');

            for (let i = 1; i < tr.length; i++) {
                const tdCodBarras = tr[i].getElementsByTagName('td')[2]; 
                const tdNome = tr[i].getElementsByTagName('td')[3]; 
                if (tdCodBarras || tdNome) {
                    const txtCodBarras = tdCodBarras.textContent || tdCodBarras.innerText;
                    const txtNome = tdNome.textContent || tdNome.innerText;
                    if (txtCodBarras.toLowerCase().indexOf(filter) > -1 || txtNome.toLowerCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        function updateSelectedItems(checkbox) {
            const itemId = checkbox.getAttribute('data-id');
            const itemCod = checkbox.getAttribute('data-cod');
            const itemNome = checkbox.getAttribute('data-nome');

            if (checkbox.checked) {
                selectedItems.push({ id: itemId, cod: itemCod, nome: itemNome });
            } else {
                const index = selectedItems.findIndex(item => item.id === itemId);
                if (index > -1) {
                    selectedItems.splice(index, 1);
                }
            }
            updateSelectedItemsTable();
        }

        function updateSelectedItemsTable() {
            const selectedItemsBody = document.getElementById('selectedItemsBody');
            selectedItemsBody.innerHTML = '';

            selectedItems.forEach(item => {
                selectedItemsBody.innerHTML += `
                    <tr>
                        <td>${item.id}</td>
                        <td>${item.cod}</td>
                        <td>${item.nome}</td>
                        <td><span class="remove-button" onclick="removeItem('${item.id}')">Remover</span></td>
                    </tr>
                `;
            });
        }

        function removeItem(itemId) {
            const index = selectedItems.findIndex(item => item.id === itemId);
            if (index > -1) {
                selectedItems.splice(index, 1);
                updateSelectedItemsTable();
                const checkboxes = document.querySelectorAll('.item-checkbox');
                checkboxes.forEach(checkbox => {
                    if (checkbox.getAttribute('data-id') === itemId) {
                        checkbox.checked = false;
                    }
                });
            }
        }

        function confirmSelection() {
            console.log('Itens selecionados:', selectedItems);
            closeModal();
        }

        function finalizeMaintenance() {
            const dataInic = document.querySelector('input[name="maintenance_date"]').value;
            const dataRetorno = document.querySelector('input[name="return_date"]').value;
            const motivo = document.querySelector('textarea[name="problem_description"]').value;
            const responsavel = document.querySelector('input[name="responsavel"]').value;

                const data = {
                dataInic,
                dataRetorno,
                motivo,
                responsavel,
                selectedItems
            };

            fetch('/manutencao/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                // Aqui você pode adicionar lógica para lidar com a resposta, como redirecionar ou mostrar uma mensagem de sucesso
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        }

        function updateItems() {
            // Esta função pode ser usada para qualquer atualização necessária ao selecionar um novo grupo
        }
    </script>
    
</body>
</html>