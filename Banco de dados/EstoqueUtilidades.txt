
CREATE VIEW vw_itens_grupos AS
SELECT 
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    g.idGrupo,
    g.nome AS grupoNome,
    g.categoria,
    g.precoGrupo
FROM 
    itens i
JOIN 
    grupo g ON i.idGrupo = g.idGrupo;

CREATE VIEW vw_itens_em_contratos AS
SELECT 
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    g.nome AS grupoNome,
    c.idContrato,
    c.tipo,
    c.dataHoraIni,
    c.dataHoraTerm
FROM 
    itens i
JOIN 
    grupo g ON i.idGrupo = g.idGrupo
JOIN 
    reserva r ON g.idGrupo = r.idGrupo
JOIN 
    contrato c ON r.idContrato = c.idContrato
WHERE 
    CURDATE() BETWEEN DATE(c.dataHoraIni) AND DATE(c.dataHoraTerm);
    

/*-- clientes

    CREATE VIEW vw_clientes_documentos AS
SELECT 
    c.idContratante,
    c.nome,
    c.email,
    c.telefone,
    pf.cpf,
    pj.cnpj
FROM 
    contratante c
LEFT JOIN 
    pessoaFisica pf ON c.idContratante = pf.idContratante
LEFT JOIN 
    pessoJuridica pj ON c.idContratante = pj.idContratante;*/


-- contratos

CREATE VIEW vw_contratos_itens AS
SELECT 
    co.idContrato,
    co.tipo,
    co.valorTotal,
    co.cep,
    co.localEvento,
    co.localRetirada,
    co.dataHoraIni,
    co.dataHoraTerm,
    co.descEmpregados,
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    g.nome AS grupoNome
FROM 
    contrato co
LEFT JOIN 
    reserva r ON co.idContrato = r.idContrato
LEFT JOIN 
    grupo g ON r.idGrupo = g.idGrupo
LEFT JOIN 
    itens i ON g.idGrupo = i.idGrupo;

CREATE VIEW vw_contratos AS
SELECT 
    idContrato,
    tipo,
    valorTotal,
    cep,
    localEvento,
    localRetirada,
    dataHoraIni,
    dataHoraTerm,
    descEmpregados,
    idUsuario,
    idContratante
FROM 
    contrato;

-- manutencao

CREATE VIEW vw_manutencoes AS
SELECT 
    m.idManutencao,
    m.motivo,
    m.dataInic AS manutencaoInicio,
    m.dataRetorno AS manutencaoRetorno,
    m.responsavel,
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    g.nome AS grupoNome,
    h.idHistorico,
    h.dataInic AS historicoInicio,
    h.dataTerm AS historicoTermino
FROM 
    manutencao m
LEFT JOIN 
    historicoManutencao h ON m.idManutencao = h.idManutencao
LEFT JOIN 
    itens i ON h.idItens = i.idItens
LEFT JOIN 
    grupo g ON i.idGrupo = g.idGrupo;



CREATE VIEW itens_em_manutencao AS
SELECT 
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    m.motivo,
    m.dataInic,
    m.dataRetorno,
    m.responsavel
FROM 
    itens i
JOIN 
    historicoManutencao hm ON i.idItens = hm.idItens
JOIN 
    manutencao m ON hm.idManutencao = m.idManutencao;
    
    CREATE OR REPLACE VIEW itens_em_manutencao_com_grupo AS
SELECT 
    hm.idManutencao,
    i.idItens,
    i.codBarras,
    i.dataLocacao,
    m.motivo,
    m.dataInic,
    m.dataRetorno,
    m.responsavel,
    g.idGrupo,
    g.nome AS nomeGrupo,
    g.categoria,
    g.precoGrupo
FROM 
    itens i
JOIN 
    grupo g ON i.idGrupo = g.idGrupo
JOIN 
    historicoManutencao hm ON i.idItens = hm.idItens
JOIN 
    manutencao m ON hm.idManutencao = m.idManutencao;


CREATE OR REPLACE VIEW vw_itens_status AS
SELECT 
    g.idGrupo, 
    g.nome,
    g.precoGrupo,
    g.categoria,
    (SELECT COUNT(i.idItens)
     FROM itens i
     INNER JOIN reserva r ON i.idGrupo = r.idGrupo
     INNER JOIN contrato c ON r.idContrato = c.idContrato
     WHERE i.idGrupo = g.idGrupo
     AND c.dataHoraTerm > NOW()
    ) AS reservado,
    (SELECT COUNT(i.idItens)
     FROM itens i
     INNER JOIN historicoManutencao hm ON i.idItens = hm.idItens
     INNER JOIN manutencao m ON hm.idManutencao = m.idManutencao
     WHERE i.idGrupo = g.idGrupo
     AND m.dataRetorno > NOW()
    ) AS manutencao,
    (SELECT COUNT(i.idItens) 
     FROM itens i 
     WHERE i.idGrupo = g.idGrupo 
     AND i.idItens NOT IN 
         (SELECT i2.idItens 
          FROM itens i2 
          INNER JOIN reserva r2 ON i2.idGrupo = r2.idGrupo
          INNER JOIN contrato c2 ON r2.idContrato = c2.idContrato
          WHERE i2.idGrupo = g.idGrupo
          AND c2.dataHoraTerm > NOW())
     AND i.idItens NOT IN 
         (SELECT i3.idItens 
          FROM itens i3 
          INNER JOIN historicoManutencao hm2 ON i3.idItens = hm2.idItens
          INNER JOIN manutencao m2 ON hm2.idManutencao = m2.idManutencao
          WHERE i3.idGrupo = g.idGrupo
          AND m2.dataRetorno > NOW())
    ) AS disponivel
FROM grupo g
GROUP BY g.idGrupo;


CREATE OR REPLACE VIEW itens_com_status AS
SELECT 
    i.idItens,
    i.codBarras,
    i.dataLocacao,  -- Data de aquisição do item
    i.idGrupo,
    g.nome AS nomeGrupo,
    g.categoria,
    g.precoGrupo,
    CASE
        WHEN hm.idManutencao IS NOT NULL THEN 'Manutenção'
        WHEN r.idReserva IS NOT NULL THEN 'Reservado'
        ELSE 'Disponível'
    END AS status,
    r.dataHoraloca AS dataReserva,  -- Data de reserva
    NULL AS dataRetorno,  -- Como o retorno não é fornecido, será NULL aqui
    IFNULL(m.dataRetorno, NULL) AS dataRetornoManutencao  -- Data de retorno de manutenção
FROM 
    itens AS i
LEFT JOIN 
    grupo AS g ON i.idGrupo = g.idGrupo
LEFT JOIN 
    historicoManutencao AS hm ON i.idItens = hm.idItens AND hm.dataTerm IS NULL  -- Verifica se o item está em manutenção
LEFT JOIN 
    manutencao AS m ON hm.idManutencao = m.idManutencao  -- Detalhes da manutenção
LEFT JOIN 
    reserva AS r ON i.idGrupo = r.idGrupo AND r.idContrato IS NOT NULL;  -- Considera a reserva vinculada ao grupo de itens


CREATE OR REPLACE VIEW categorias_grupos AS 
SELECT 
    DISTINCT(categoria) FROM grupo;